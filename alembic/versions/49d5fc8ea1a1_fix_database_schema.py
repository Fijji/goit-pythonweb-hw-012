"""Fix database schema

Revision ID: 49d5fc8ea1a1
Revises: 
Create Date: 2025-02-02 00:11:24.521823

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '49d5fc8ea1a1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_contact')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_contacts_email', table_name='contacts')
    op.drop_index('ix_contacts_first_name', table_name='contacts')
    op.drop_index('ix_contacts_id', table_name='contacts')
    op.drop_index('ix_contacts_last_name', table_name='contacts')
    op.drop_index('ix_contacts_phone', table_name='contacts')
    op.drop_table('contacts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contacts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('contacts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('additional_info', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='contacts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_contacts_phone', 'contacts', ['phone'], unique=False)
    op.create_index('ix_contacts_last_name', 'contacts', ['last_name'], unique=False)
    op.create_index('ix_contacts_id', 'contacts', ['id'], unique=False)
    op.create_index('ix_contacts_first_name', 'contacts', ['first_name'], unique=False)
    op.create_index('ix_contacts_email', 'contacts', ['email'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('user_contact',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('contact_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], name='user_contact_contact_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_contact_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'contact_id', name='user_contact_pkey')
    )
    # ### end Alembic commands ###
